//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace XTMF.Update.TMG.WebUpdate {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
#if FALSE

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="XTMFUpdateWebserviceSoap", Namespace="http://tmg.utoronto.ca:80/XTMFUpdate.asmx")]
    public partial class XTMFUpdateWebservice : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCoreFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModuleFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCodeFilesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public XTMFUpdateWebservice() {
            this.Url = "http://tmg.utoronto.ca/XTMFUpdate.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCoreFilesCompletedEventHandler GetCoreFilesCompleted;
        
        /// <remarks/>
        public event GetModuleFilesCompletedEventHandler GetModuleFilesCompleted;
        
        /// <remarks/>
        public event GetCodeFilesCompletedEventHandler GetCodeFilesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tmg.utoronto.ca:80/XTMFUpdate.asmx/GetCoreFiles", RequestNamespace="http://tmg.utoronto.ca:80/XTMFUpdate.asmx", ResponseNamespace="http://tmg.utoronto.ca:80/XTMFUpdate.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetCoreFiles(bool amd64) {
            object[] results = this.Invoke("GetCoreFiles", new object[] {
                        amd64});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCoreFilesAsync(bool amd64) {
            this.GetCoreFilesAsync(amd64, null);
        }
        
        /// <remarks/>
        public void GetCoreFilesAsync(bool amd64, object userState) {
            if ((this.GetCoreFilesOperationCompleted == null)) {
                this.GetCoreFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoreFilesOperationCompleted);
            }
            this.InvokeAsync("GetCoreFiles", new object[] {
                        amd64}, this.GetCoreFilesOperationCompleted, userState);
        }
        
        private void OnGetCoreFilesOperationCompleted(object arg) {
            if ((this.GetCoreFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoreFilesCompleted(this, new GetCoreFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tmg.utoronto.ca:80/XTMFUpdate.asmx/GetModuleFiles", RequestNamespace="http://tmg.utoronto.ca:80/XTMFUpdate.asmx", ResponseNamespace="http://tmg.utoronto.ca:80/XTMFUpdate.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetModuleFiles(bool amd64) {
            object[] results = this.Invoke("GetModuleFiles", new object[] {
                        amd64});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetModuleFilesAsync(bool amd64) {
            this.GetModuleFilesAsync(amd64, null);
        }
        
        /// <remarks/>
        public void GetModuleFilesAsync(bool amd64, object userState) {
            if ((this.GetModuleFilesOperationCompleted == null)) {
                this.GetModuleFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModuleFilesOperationCompleted);
            }
            this.InvokeAsync("GetModuleFiles", new object[] {
                        amd64}, this.GetModuleFilesOperationCompleted, userState);
        }
        
        private void OnGetModuleFilesOperationCompleted(object arg) {
            if ((this.GetModuleFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModuleFilesCompleted(this, new GetModuleFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tmg.utoronto.ca:80/XTMFUpdate.asmx/GetCodeFiles", RequestNamespace="http://tmg.utoronto.ca:80/XTMFUpdate.asmx", ResponseNamespace="http://tmg.utoronto.ca:80/XTMFUpdate.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetCodeFiles() {
            object[] results = this.Invoke("GetCodeFiles", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCodeFilesAsync() {
            this.GetCodeFilesAsync(null);
        }
        
        /// <remarks/>
        public void GetCodeFilesAsync(object userState) {
            if ((this.GetCodeFilesOperationCompleted == null)) {
                this.GetCodeFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCodeFilesOperationCompleted);
            }
            this.InvokeAsync("GetCodeFiles", new object[0], this.GetCodeFilesOperationCompleted, userState);
        }
        
        private void OnGetCodeFilesOperationCompleted(object arg) {
            if ((this.GetCodeFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCodeFilesCompleted(this, new GetCodeFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetCoreFilesCompletedEventHandler(object sender, GetCoreFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoreFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoreFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetModuleFilesCompletedEventHandler(object sender, GetModuleFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModuleFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModuleFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetCodeFilesCompletedEventHandler(object sender, GetCodeFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCodeFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCodeFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
#endif
}

#pragma warning restore 1591